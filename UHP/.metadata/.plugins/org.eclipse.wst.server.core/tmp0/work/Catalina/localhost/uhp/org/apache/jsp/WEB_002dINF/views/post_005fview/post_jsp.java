/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2023-02-02 03:45:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.post_005fview;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.uh.vo.BoardVo;
import com.uh.vo.PostVo;
import java.util.ArrayList;

public final class post_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.uh.vo.BoardVo");
    _jspx_imports_classes.add("com.uh.vo.PostVo");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    ");

    PostVo post_vo=(PostVo)request.getAttribute("post_vo"); 
    
      out.write('\n');
      out.write('\n');

String member_idx = (String)request.getAttribute("member_idx") ; // 회원 고유번호	
String board_category=request.getParameter("car");
String post_idx=request.getParameter("post_idx");
String page_num=request.getParameter("page_num");
String post_board_name=request.getParameter("post_board_name");
String search_mode=request.getParameter("search_mode");
String search_str=request.getParameter("search_str");
String nick=(String)session.getAttribute("nick");
String my=request.getParameter("my");
String main=request.getParameter("main");
int like=(int)request.getAttribute("like");


if(post_board_name==null){
	
	response.sendRedirect("main");
}
if(nick==null){
	nick="";
}
if(my==null){
	my="";
}
if(main==null){
	main="";
}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Do+Hyeon&display=swap\" rel=\"stylesheet\">\n");
      out.write("<style>\n");
      out.write("		\n");
      out.write("		.post_container{\n");
      out.write("			width:1000px; \n");
      out.write("			margin-left:10px;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("			.post_board_name_div{	\n");
      out.write("				font-size: 43px;	\n");
      out.write("				font-family: 'Do Hyeon', sans-serif;	\n");
      out.write("				padding: 0 0 15px 0;\n");
      out.write("				margin-left: 20px;\n");
      out.write("			}\n");
      out.write("			.post_info_container{\n");
      out.write("				background-color: #f7f9fa;\n");
      out.write("				border: 1px solid #dae1e6; \n");
      out.write("				height: 100px;\n");
      out.write("				padding: 10px 10px;\n");
      out.write("			}\n");
      out.write("				.post_info_span1{\n");
      out.write("					font-size:40px; 					\n");
      out.write("				}\n");
      out.write("				.post_info_span2{\n");
      out.write("					font-size:25px;\n");
      out.write("					float: left;\n");
      out.write("				}\n");
      out.write("				.post_info_span3{\n");
      out.write("					font-size:25px;\n");
      out.write("					float: right;\n");
      out.write("					\n");
      out.write("				}\n");
      out.write("			\n");
      out.write("			.post_context_container{\n");
      out.write("				background-color: white;\n");
      out.write("				border: 1px solid #dae1e6;\n");
      out.write("				height: 800px;\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			.post_like_container{\n");
      out.write("					background-color: #f7f9fa;\n");
      out.write("			border: 1px solid #dae1e6; 							\n");
      out.write("			}\n");
      out.write("				.post_like_div{\n");
      out.write("					text-align: center;\n");
      out.write("					width:100px;\n");
      out.write("					padding:15px;\n");
      out.write("					margin: 15px auto;\n");
      out.write("					border:1px solid black;\n");
      out.write("					border-radius: 10%;\n");
      out.write("					cursor: pointer;\n");
      out.write("					background-color: ");
      out.print((like==0?"white":" rgb(165, 222, 250)"));
      out.write(";\n");
      out.write("					\n");
      out.write("				}\n");
      out.write("					.post_like_img{\n");
      out.write("						 width:100px;\n");
      out.write("						 height:75px;\n");
      out.write("					}\n");
      out.write("					.post_like_num{\n");
      out.write("						font-size: 25px;\n");
      out.write("						color: blue;\n");
      out.write("					}\n");
      out.write("				\n");
      out.write("				\n");
      out.write("			.post_reply_container{\n");
      out.write("				background-color:white;\n");
      out.write("				border: 1px solid #dae1e6; \n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			.post_board_container{\n");
      out.write("			}\n");
      out.write("				/* 게시판 부분 임포트 과정에서 생기는 요소 */\n");
      out.write("				.board_name_div{\n");
      out.write("					display: none;\n");
      out.write("				}\n");
      out.write("				.board_container{\n");
      out.write("					margin-left:0px !important;			\n");
      out.write("				}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\n");
      out.write("<script src=\"resources/JSs/ajax/ajax.js\"></script>\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("	window.onload=get_board_kit(");
      out.print(page_num);
      out.write(',');
      out.write('\'');
      out.print(post_board_name);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_mode);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_str);
      out.write("');\n");
      out.write("	\n");
      out.write("		function get_board_kit(page_num,post_board_name,search_mode,search_str){\n");
      out.write("			$.ajax({ \n");
      out.write("			type: 'get' , \n");
      out.write("			url: 'board_kit?page_num='+page_num+'&post_board_name='+post_board_name+'&search_mode='+search_mode+'&search_str='+search_str+'&my=");
      out.print(my);
      out.write("&main=");
      out.print(main);
      out.write("', \n");
      out.write("			success: function(data) {\n");
      out.write("				$(\"#post_board_container\").html(data); \n");
      out.write("				} \n");
      out.write("			}); \n");
      out.write("		}\n");
      out.write("		function goUpdate(){\n");
      out.write("			location.href='post_update?page_num=");
      out.print(page_num);
      out.write("&post_board_name='+\n");
      out.write("			'");
      out.print(post_board_name);
      out.write("&search_mode=");
      out.print(search_mode);
      out.write("&search_str=");
      out.print(search_str);
      out.write("&car=");
      out.print(board_category);
      out.write("&post_idx=");
      out.print(post_idx);
      out.write("';\n");
      out.write("			//page_num,post_board_name,search_mode,search_str,car,post_idx\n");
      out.write("			}\n");
      out.write("		function goDelete(){\n");
      out.write("			location.href='post_delete.do?page_num=");
      out.print(page_num);
      out.write("&post_board_name='+\n");
      out.write("			'");
      out.print(post_board_name);
      out.write("&search_mode=");
      out.print(search_mode);
      out.write("&search_str=");
      out.print(search_str);
      out.write("&car=");
      out.print(board_category);
      out.write("&post_idx=");
      out.print(post_idx);
      out.write("';\n");
      out.write("			//page_num,post_board_name,search_mode,search_str,car,post_idx\n");
      out.write("			}\n");
      out.write("		\n");
      out.write("		/* 좋아요 */\n");
      out.write("		function golike(){\n");
      out.write("			");
if(nick.equals("")){
      out.write("\n");
      out.write("				location.href='notSignIn';\n");
      out.write("			");
}else{
      out.write("\n");
      out.write("				var like_color=$('#post_like_div').css('backgroundColor');\n");
      out.write("				/* rgb(255, 255, 255) 흰색  rgb(165, 222, 250) 파랑*/\n");
      out.write("				if(like_color=='rgb(255, 255, 255)'){ /* 안눌려있다면. */\n");
      out.write("					$('#post_like_div').css('backgroundColor','rgb(165, 222, 250)');\n");
      out.write("					ajaxDo('like_up?post_idx=");
      out.print(post_idx);
      out.write("&nick=");
      out.print(nick);
      out.write("','');\n");
      out.write("					like_count();\n");
      out.write("				}else{/* 눌려있다면 */\n");
      out.write("					$('#post_like_div').css('backgroundColor','rgb(255, 255, 255)');\n");
      out.write("					ajaxDo('like_down?post_idx=");
      out.print(post_idx);
      out.write("&nick=");
      out.print(nick);
      out.write("','');\n");
      out.write("					like_count();\n");
      out.write("				}\n");
      out.write("			");
}
      out.write("\n");
      out.write("		}\n");
      out.write("</script>\n");
      out.write("	\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- top bar  -->\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script><script src=\"resources/JSs/bar_js/get_top_bar.js\"></script><div id=\"top_bar\" ></div>\n");
      out.write("\n");
      out.write("<div class=\"context_main\" style=\"margin: auto;width: 1260px;\" >\n");
      out.write("	<!-- left bar -->\n");
      out.write("	<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script><script src=\"resources/JSs/bar_js/get_left_bar.js\"></script><div id=\"left_bar\" ></div>\n");
      out.write("	\n");
      out.write("	<div class=\"context_container\" >\n");
      out.write("	<!-- \n");
      out.write("	  context-container은 bar들이 자리를 차지고하고 남은 공간.즉 페이지의 내용이 들어갈 공간이다.\n");
      out.write("	  bar를 참조하는 페이지라면 꼭 내용을 class=\"context-container\"로 설정한 div안에 담아준다.\n");
      out.write("	   추가적인 스타일은 left_bar.css에 정의 되어있다. \n");
      out.write("	   크롬 화면창 크기가 작아질 때 float:left인 div가 내려가는 현상은 min-width 속성값을 조정하여 내용이 짤려 내려가지 않도록 하면 된다.\n");
      out.write("	 -->\n");
      out.write("\n");
      out.write("	<div class=\"post_container\">\n");
      out.write("	\n");
      out.write("				<!-- 게시판 이름 -->\n");
      out.write("		");
if(my!=null&&my.equals("my")) {
      out.write("\n");
      out.write("			<div class=\"post_board_name_div\"><!-- style은 board_kit.css에 정의  -->\n");
      out.write("				<span onclick=\"location.href='board_main?post_board_name=ALL&search_mode=post_title&search_str=");
      out.print(nick );
      out.write("'\" style=\"cursor: pointer;\">내 게시글</span>		\n");
      out.write("			</div>\n");
      out.write("		");
}else if(main!=null&&main.equals("main")){
      out.write("\n");
      out.write("			<div class=\"post_board_name_div\" style=\"cursor: pointer;\"><!-- style은 board_kit.css에 정의  -->\n");
      out.write("				<span onclick=\"location.href='main'\" >레전드 놀이터!</span>			\n");
      out.write("			</div>\n");
      out.write("		");
}else{ 
      out.write("\n");
      out.write("			");
if(!post_board_name.equals("ALL")) {
      out.write("\n");
      out.write("			<div class=\"post_board_name_div\"><!-- style은 board_kit.css에 정의  -->\n");
      out.write("				<span onclick=\"location.href='board_main?post_board_name=");
      out.print( post_board_name);
      out.write("'\" style=\"cursor: pointer;\">");
      out.print( post_board_name);
      out.write(" 게시판</span>\n");
      out.write("				<span style=\"font-size: 15px;\"> ");
      out.print(board_category);
      out.write(' ');
      out.write('>');
      out.write(' ');
      out.print( post_board_name );
      out.write(" </span>\n");
      out.write("			</div>\n");
      out.write("			");
} else {
      out.write("\n");
      out.write("			<div class=\"post_board_name_div\"><!-- style은 board_kit.css에 정의  -->\n");
      out.write("				<span onclick=\"location.href='board_main?post_board_name=ALL&search_mode=");
      out.print(search_mode );
      out.write("&search_str=");
      out.print(search_str );
      out.write("'\" style=\"cursor: pointer;\">전체 검색</span>\n");
      out.write("				<span style=\"font-size: 15px;\">  > ");
      out.print(search_str );
      out.write(" </span>\n");
      out.write("			</div>\n");
      out.write("			");
}
      out.write('\n');
      out.write('	');
      out.write('	');
}
      out.write("\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		\n");
      out.write("			\n");
      out.write("			<div class=\"post_info_container\"  >\n");
      out.write("				<span class=\"post_info_span1\">");
      out.print(post_vo.getPost_title());
      out.write("</span>\n");
      out.write("				<br><br>\n");
      out.write("				<span class=\"post_info_span2\">");
      out.print(post_vo.getPost_member_nick());
      out.write(' ');
      out.write('|');
      out.write(' ');
      out.print(post_vo.getPost_date());
      out.write("</span>\n");
      out.write("				<span class=\"post_info_span3\">조회  ");
      out.print(post_vo.getPost_view());
      out.write(" | 추천 <span id='like_count'></span> |댓글 30</span>\n");
      out.write("			</div>\n");
      out.write("			");
if(nick.equals(post_vo.getPost_member_nick())&&nick!=null){ 
      out.write("\n");
      out.write("			<div id=\"update_delete_div\" style=\"width: 100%\"> \n");
      out.write("				<input type=\"button\" value=\"삭제\" style=\"float: right;\" onclick=\"goDelete()\">\n");
      out.write("				<input type=\"button\" value=\"수정\" style=\"float: right;\" onclick=\"goUpdate()\">\n");
      out.write("			</div>\n");
      out.write("			");
} 
      out.write("\n");
      out.write("			<div class=\"post_context_container\" >\n");
      out.write("				<p>");
      out.print(post_vo.getPost_con() );
      out.write("</p>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<!-- 좋아요 -->\n");
      out.write("			<div class=\"post_like_container\">\n");
      out.write("				<div id=\"post_like_div\" class=\"post_like_div\" onclick=\"golike()\">\n");
      out.write("					<img class=\"post_like_img\" src=\"resources/imgs/post_img/like.png\">\n");
      out.write("					<br>\n");
      out.write("					<span  class=\"post_like_num\"></span>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<div class=\"post_reply_container\" id=\"post_reply_container\"></div>\n");
      out.write("				\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("			<div class=\"post_board_container\" id=\"post_board_container\"></div>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	like_count();\n");
      out.write("	function like_count(){\n");
      out.write("		var lc=ajaxDo('like_count?post_idx=");
      out.print(post_idx);
      out.write("','');\n");
      out.write("		$('#like_count').text(lc);\n");
      out.write("		$('.post_like_num').text(lc);\n");
      out.write("		}\n");
      out.write("	window.onload=get_board_kit(");
      out.print(page_num);
      out.write(',');
      out.write('\'');
      out.print(post_board_name);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_mode);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_str);
      out.write("');\n");
      out.write("	window.onload=reply_select('");
      out.print(member_idx);
      out.write('\'');
      out.write(',');
      out.print(post_idx);
      out.write(',');
      out.print(page_num);
      out.write(',');
      out.write('\'');
      out.print(post_board_name);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_mode);
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(search_str);
      out.write("');\n");
      out.write("	\n");
      out.write("	function get_board_kit(page_num,post_board_name,search_mode,search_str){\n");
      out.write("		$.ajax({ \n");
      out.write("		type: 'get',\n");
      out.write("		url: 'board_kit?page_num='+page_num+'&post_board_name='+post_board_name+'&search_mode='+search_mode+'&search_str='+search_str,\n");
      out.write("		success: function(data) {\n");
      out.write("			$(\"#post_board_container\").html(data);\n");
      out.write("			} \n");
      out.write("		}); \n");
      out.write("	}\n");
      out.write("		\n");
      out.write("\n");
      out.write("	function reply_select(member_idx, post_idx, page_num, post_board_name, search_mode, search_str) {\n");
      out.write("		$.ajax({\n");
      out.write("			type:'get',\n");
      out.write("			async:false,\n");
      out.write("			url:'reply_select.do?member_idx=' + member_idx + '&post_idx=' + post_idx + \"&page_num=\" + page_num + \"&post_board_name=\" + post_board_name + \"&search_mode=\" + search_mode + \"&search_str=\" + search_str,\n");
      out.write("			success: function(data) {\n");
      out.write("				$(\"#post_reply_container\").html(data);\n");
      out.write("			}\n");
      out.write("				\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
